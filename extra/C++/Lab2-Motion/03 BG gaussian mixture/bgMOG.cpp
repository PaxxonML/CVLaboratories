#include <stdio.h>
#include <stdlib.h>
#include <opencv2/opencv.hpp>
#include <opencv2/highgui.hpp>
#include <opencv2/bgsegm.hpp>

using namespace cv;
using namespace std;


int main()
{

    //global variables
    Mat frame; //current frame
    Mat fgMaskMOG; //fg mask generated by MOG method
    Mat bg; //background image

    int nFrames = 10000;
    double learningRate = -1;

    int history = 200;
    int nmixtures = 200;
    double backgroundRatio = 0.5;
    double noiseSigma = 1;

    Ptr< bgsegm::BackgroundSubtractorMOG> pMOG;
    //Ptr< BackgroundSubtractorMOG2> pMOG; //MOG Background subtractor

    pMOG = bgsegm::createBackgroundSubtractorMOG(history,nmixtures,backgroundRatio,noiseSigma);//history,nmixtures,backgroundRatio,noiseSigma); //change to MOG2
    //pMOG = createBackgroundSubtractorMOG2(history,nmixtures,backgroundRatio); //change to MOG2


    VideoCapture cap(0);

    if (!cap.isOpened())
            return 0;

    for (int i = 0; i < nFrames; i++){
        cap >> frame;

        pMOG->apply( frame, fgMaskMOG, learningRate);
        //pMOG->getBackgroundImage(bg); //change pMOG to pMOG2 to use this function

        imshow("Origin", frame);
        imshow("MOG", fgMaskMOG);
        //imshow("BgImage", bg);

        waitKey(30);
 }


 return 0;
}
